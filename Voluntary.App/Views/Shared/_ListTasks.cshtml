@using DataTables.AspNetCore.Mvc

<div class="row">
    <div class="col-xs-12">
    @if (User.IsInRole("admin") || User.IsInRole("user"))
    {
        <a href="@Url.Action("Create", "Functions")" class="btn btn-small btn-primary">@_loc.GetLocalizedHtmlString("Add function").Value <i class="fa fa-plus"></i></a>
    }
        &nbsp;&nbsp;<button onclick="modJs.showFilters();return false;" class="btn btn-small btn-primary">@_loc.GetLocalizedHtmlString("Filter").Value <i class="fa fa-filter"></i></button>&nbsp;&nbsp;<button id="Employee_resetFilters" onclick="modJs.resetFilters();return false;" class="btn btn-small btn-default" style="display: none;">Reset Filters <i class="fa fa-times"></i></button>
    </div>
    <div class="box-body table-responsive" style="margin-top:30px">

        <div class="row ">
            <div style="margin: 20px">

                @(Html.Ext().Grid<TaskQueryViewModel>
    ()
    .Name("tasks").RowId("id").ClassName("table table-bordered dataTable")
    .Columns(cols =>
    {
    cols.Add(c => c.Name).Data("name").Title(_loc.GetLocalizedHtmlString("Name").Value);
    //if(User.IsInRole("Admin"))
    //if(User.IsInRole("Admin"))
    cols.Add(c => c.Description).Data("description").Title(_loc.GetLocalizedHtmlString("Description").Value);
        if (User.IsInRole("admin") || User.IsInRole("user"))
    cols.Add(c => c.Id).Data("id").Render(() => "onRenderTask"); ; //.Click("onClick");
    })
    .ServerSide(true)
    .LengthMenu(c =>
    {
    c.Add(new int[] { 10, 25, 50 });
    c.Add(-1, "All");
    })
    .DataSource(c =>
    c.Ajax().Url(Url.Action("GetList", "Functions")).Method("GET").DataSrc("data")
    ))
</div>
        </div>
    </div>

</div>
<script>
    function onRenderTask(parameters) {
        return '';
    }
</script>